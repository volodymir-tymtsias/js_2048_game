{"version":3,"sources":["scripts/main.js"],"names":["filledCells","epmtyCells","buttonStart","document","querySelector","gameScore","rows","querySelectorAll","cells","firstMove","moved","row","cell","push","sectionRowIndex","column","cellIndex","value","fillCell","randomEmptyCell","Math","floor","random","length","textContent","classList","add","splice","moveNumbers","direction","merge","filledCell","sortCells","filterCells","findCell","cellA","cellB","sort","filledCellForMerge","filter","find","cellExchange","epmtyCellForMove","startGame","forEach","item","className","toggle","addEventListener","gameMove","e","key","remove","canMove","cellOfPreviousRow","cellOfNextRow","cellOfPreviousColumn","cellOfNextColumn","removeEventListener","whereFrom","whereTo"],"mappings":"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","file":"main.e00be653.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst buttonStart = document.querySelector('.start');\nconst gameScore = document.querySelector('.game-score');\nconst rows = document.querySelectorAll('.field-row');\nconst cells = [];\nlet filledCells;\nlet epmtyCells;\nlet firstMove = false;\nlet moved = false;\n\nfor (const row of rows) {\n  for (const cell of row.cells) {\n    cells.push({\n      cell: cell,\n      row: row.sectionRowIndex,\n      column: cell.cellIndex,\n      value: 0,\n    });\n  }\n}\n\nfunction fillCell() {\n  const randomEmptyCell = Math.floor(Math.random() * epmtyCells.length);\n\n  if (Math.random() > 0.9) {\n    epmtyCells[randomEmptyCell].cell.textContent = 4;\n    epmtyCells[randomEmptyCell].cell.classList.add('field-cell--4');\n    epmtyCells[randomEmptyCell].value = 4;\n  } else {\n    epmtyCells[randomEmptyCell].cell.textContent = 2;\n    epmtyCells[randomEmptyCell].cell.classList.add('field-cell--2');\n    epmtyCells[randomEmptyCell].value = 2;\n  }\n\n  filledCells.push(...epmtyCells.splice(randomEmptyCell, 1));\n}\n\nfunction moveNumbers(direction, merge) {\n  let filledCell;\n  let sortCells;\n  let filterCells;\n  let findCell;\n\n  switch (direction) {\n    case 'Up':\n      sortCells = (cellA, cellB) => cellA.row - cellB.row;\n\n      filterCells = (cell) => filledCell.column === cell.column\n        && filledCell.row > cell.row;\n\n      findCell = (cell) => filledCell.column === cell.column\n        && (filledCell.row - 1) === cell.row;\n      break;\n\n    case 'Down':\n      sortCells = (cellA, cellB) => cellB.row - cellA.row;\n\n      filterCells = (cell) => filledCell.column === cell.column\n        && filledCell.row < cell.row;\n\n      findCell = (cell) => filledCell.column === cell.column\n        && (filledCell.row + 1) === cell.row;\n      break;\n\n    case 'Right':\n      sortCells = (cellA, cellB) => cellB.column - cellA.column;\n\n      filterCells = (cell) => filledCell.row === cell.row\n        && filledCell.column < cell.column;\n\n      findCell = (cell) => filledCell.row === cell.row\n        && (filledCell.column + 1) === cell.column;\n      break;\n\n    case 'Left':\n      sortCells = (cellA, cellB) => cellA.column - cellB.column;\n\n      filterCells = (cell) => filledCell.row === cell.row\n        && filledCell.column > cell.column;\n\n      findCell = (cell) => filledCell.row === cell.row\n        && (filledCell.column - 1) === cell.column;\n      break;\n  }\n\n  filledCells.sort(sortCells);\n\n  if (!merge) {\n    for (filledCell of filledCells) {\n      const epmtyCellForMove = epmtyCells\n        .filter(filterCells)\n        .sort(sortCells)[0];\n\n      if (epmtyCellForMove) {\n        cellExchange(filledCell, epmtyCellForMove);\n      }\n    }\n  } else {\n    for (filledCell of filledCells) {\n      const filledCellForMerge = filledCells\n        .filter(cell => filledCell.value === cell.value && cell !== filledCell)\n        .find(findCell);\n\n      if (filledCellForMerge) {\n        cellExchange(filledCell, filledCellForMerge, 'merge');\n      }\n    }\n  }\n}\n\nfunction startGame() {\n  cells.forEach(item => {\n    item.cell.textContent = '';\n    item.cell.className = 'field-cell';\n    item.value = 0;\n  });\n\n  epmtyCells = [...cells];\n  filledCells = [];\n  fillCell();\n  fillCell();\n  document.querySelector('.message-start').classList.toggle('hidden', true);\n  document.querySelector('.message-win').classList.toggle('hidden', true);\n  document.querySelector('.message-lose').classList.toggle('hidden', true);\n  gameScore.textContent = '0';\n\n  document.addEventListener('keydown', gameMove);\n}\n\nfunction gameMove(e) {\n  if (e.key !== 'ArrowUp' && e.key !== 'ArrowDown'\n    && e.key !== 'ArrowLeft' && e.key !== 'ArrowRight') {\n    return;\n  }\n\n  if (e.key === 'ArrowUp') {\n    moveNumbers('Up');\n    moveNumbers('Up', 'merge');\n    moveNumbers('Up');\n  }\n\n  if (e.key === 'ArrowDown') {\n    moveNumbers('Down');\n    moveNumbers('Down', 'merge');\n    moveNumbers('Down');\n  }\n\n  if (e.key === 'ArrowRight') {\n    moveNumbers('Right');\n    moveNumbers('Right', 'merge');\n    moveNumbers('Right');\n  }\n\n  if (e.key === 'ArrowLeft') {\n    moveNumbers('Left');\n    moveNumbers('Left', 'merge');\n    moveNumbers('Left');\n  }\n\n  if (moved) {\n    if (!firstMove) {\n      firstMove = true;\n      buttonStart.classList.remove('start');\n      buttonStart.classList.add('restart');\n      buttonStart.textContent = 'Restart';\n    }\n\n    fillCell();\n    moved = false;\n\n    if (!epmtyCells.length) {\n      let canMove = false;\n\n      for (const filledCell of filledCells) {\n        const cellOfPreviousRow = filledCells.find(cell =>\n          cell.row === filledCell.row - 1 && cell.column === filledCell.column);\n        const cellOfNextRow = filledCells.find(cell =>\n          cell.row === filledCell.row + 1 && cell.column === filledCell.column);\n        const cellOfPreviousColumn = filledCells.find(cell =>\n          cell.column === filledCell.column - 1 && cell.row === filledCell.row);\n        const cellOfNextColumn = filledCells.find(cell =>\n          cell.column === filledCell.column - 1 && cell.row === filledCell.row);\n\n        if (cellOfPreviousRow) {\n          if (cellOfPreviousRow.value === filledCell.value) {\n            canMove = true;\n          }\n        }\n\n        if (cellOfNextRow) {\n          if (cellOfNextRow.value === filledCell.value) {\n            canMove = true;\n          }\n        }\n\n        if (cellOfPreviousColumn) {\n          if (cellOfPreviousColumn.value === filledCell.value) {\n            canMove = true;\n          }\n        }\n\n        if (cellOfNextColumn) {\n          if (cellOfNextColumn.value === filledCell.value) {\n            canMove = true;\n          }\n        }\n      }\n\n      if (!canMove) {\n        document.querySelector('.message-lose').classList.remove('hidden');\n        document.removeEventListener('keydown', gameMove);\n      }\n    }\n  }\n}\n\nfunction cellExchange(whereFrom, whereTo, merge) {\n  moved = true;\n  whereTo.cell.textContent = whereFrom.value + whereTo.value;\n  whereTo.value = whereFrom.value + whereTo.value;\n  whereTo.cell.classList.add('field-cell--' + whereTo.value);\n\n  if (!merge) {\n    filledCells.push(whereTo);\n  }\n\n  whereFrom.cell.textContent = '';\n  whereFrom.cell.className = 'field-cell';\n  whereFrom.value = 0;\n  epmtyCells.push(whereFrom);\n  epmtyCells = epmtyCells.filter(cell => cell.value === 0);\n  filledCells = filledCells.filter(cell => cell.value > 0);\n\n  if (merge) {\n    gameScore.textContent = +gameScore.textContent + whereTo.value;\n\n    if (whereTo.value === 2048) {\n      document.querySelector('.message-win').classList.remove('hidden');\n      document.removeEventListener('keydown', gameMove);\n    }\n  }\n}\n\nbuttonStart.addEventListener('click', startGame);\n"]}